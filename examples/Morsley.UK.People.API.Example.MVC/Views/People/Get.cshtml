@model GetPeople

@{
    var url = ViewBag.URL;
    if (string.IsNullOrEmpty(url)) throw new InvalidOperationException("Did not expect 'url' to be empty!");
}

<div class="text-center">

    <h1 class="display-4 border-bottom pb-3 mb-4">Get People</h1>
    
    <form asp-controller="People" asp-action="Get" method="post" class="needs-validation" novalidate>

        @* PAGE NUMBER *@
        <div class="mb-3 row">
            <label for="PageNumber" class="col-sm-3 col-form-label text-end">Page Number</label>
            <div class="col-sm-6">
                <input type="text" class="form-control" id="PageNumber" name="PageNumber" aria-describedby="pageNumberHelp" value="@Model?.PageNumber">
                <div id="pageNumberHelp" class="text-start form-text">A whole number, greater than or equal to 1 (defaults to 1).</div>
            </div>
        </div>

        @* PAGE SIZE *@
        <div class="mb-3 row">
            <label for="PageSize" class="col-sm-3 col-form-label text-end">Page Size</label>
            <div class="col-sm-6">
                <input type="text" class="form-control" id="PageSize" name="PageSize" aria-describedby="pageSizeHelp" value="@Model?.PageSize">
                <div id="pageSizeHelp" class="text-start form-text">A whole number, greater than or equal to 1 (defaults to 10).</div>
            </div>
        </div>

        @* FIELDS *@
        <div class="mb-3 row">
            <label for="Fields" class="col-sm-3 col-form-label text-end">Fields</label>
            <div class="col-sm-6">
                <input type="text" class="form-control" id="Fields" name="Fields" aria-describedby="fieldsHelp" value="@Model?.Fields">
                <div id="fieldsHelp" class="text-start form-text">A comma separated list of fields you want in the response. i.e. FirstName,LastName</div>
            </div>
        </div>
            
        @* FILTER *@
        <div class="mb-3 row">
            <label for="Filter" class="col-sm-3 col-form-label text-end">Filter</label>
            <div class="col-sm-6">
                <input type="text" class="form-control" id="Filter" name="Filter" aria-describedby="filtersHelp" value="@Model?.Filter">
                <div id="filterHelp" class="text-start form-text">A comma separated list of filters you want in the response. i.e. Sex:Male,Gender:Cisgender</div>
            </div>
        </div>

        @* SEARCH *@
        <div class="mb-3 row">
            <label for="Search" class="col-sm-3 col-form-label text-end">Search</label>
            <div class="col-sm-6">
                <input type="text" class="form-control" id="Search" name="Search" aria-describedby="searchHelp" value="@Model?.Search">
                <div id="searchHelp" class="text-start form-text">Text to search for in any text related fields.</div>
            </div>
        </div>
        
        @* SORT *@
        <div class="mb-3 row">
            <label for="Sort" class="col-sm-3 col-form-label text-end">Sort</label>
            <div class="col-sm-6">
                <input type="text" class="form-control" id="Sort" name="Sort" aria-describedby="sorthHelp" value="@Model?.Sort">
                <div id="sortHelp" class="text-start form-text">A comma separated list of fields to sort by. i.e. LastName:asc,FirstName:asc (also the default)</div>
            </div>
        </div>
    
        <a asp-controller="Home" asp-action="Index" class="btn btn-sm btn-secondary btn-width">Cancel</a>
        <input type="submit" class="btn btn-sm btn-info btn-width" value="Get" />
    
    </form>
    
</div>    

@if (Model!.Resource?.Embedded is not null || Model!.NoResults)
{
    <div class="container-fluid text-center">

        <h5 class="border-bottom border-top pb-3 pt-3 mb-4 mt-4">Embedded</h5>

        @{
            if (Model?.Resource?.Embedded?.Any() is null)
            {
                <p class="text-muted">No person(s) found that match that above criteria.</p>
            }
            else if (Model?.Resource?.Embedded?.Any() is not null)
            {
                <table class="table table-responsive text-start">
                    <thead>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Sex</th>
                        <th>Gender</th>
                        <th>Date of Birth</th>
                        <th class="text-center">Actions</th>
                    </tr>
                    </thead>
                    <tbody class="small">
                    @{
                        foreach (var person in Model.Resource.Embedded)
                        {
                            @if (person?.Data is not null)
                            {
                                <tr>
                                    <td>@person.Data.FirstName</td>
                                    <td>@person.Data.LastName</td>
                                    <td>@person.Data.Sex</td>
                                    <td>@person.Data.Gender</td>
                                    <td>@person.Data.DateOfBirth</td>
                                    <td class="text-center">

                                        @if (person.Links is not null)
                                        {
                                            foreach (var link in person.Links)
                                            {
                                                TempData[$"{link.Method}_{person.Data.Id}"] = link.HypertextReference;
                                                <a href="@(ButtonHelper.GetHypertextReference(url, link.Method, link.HypertextReference))" 
                                                   class="btn btn-sm btn-@(ButtonHelper.GetBootstrapColour(link.Method)) btn-width">@(ButtonHelper.GetButtonText(link.Method))</a>
                                            }
                                        }

                                    </td>
                                </tr>
                            }
                        }
                    }
                    </tbody>
                </table>
            }

        }

    </div>
}