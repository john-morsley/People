<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Users.API.Read</name>
    </assembly>
    <members>
        <member name="T:Users.API.Read.AutoMapper.GetPageOfUsersRequestToGetPageOfUsersQuery">
            <summary>
            
            </summary>
        </member>
        <member name="M:Users.API.Read.AutoMapper.GetPageOfUsersRequestToGetPageOfUsersQuery.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Users.API.Read.AutoMapper.GetUserRequestToGetUserQuery">
            <summary>
            
            </summary>
        </member>
        <member name="M:Users.API.Read.AutoMapper.GetUserRequestToGetUserQuery.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Users.API.Read.AutoMapper.NullableDateTimeTypeConverter">
            <summary>
            A type converter that converts a nullable DateTime to a nullable string..
            </summary>
        </member>
        <member name="M:Users.API.Read.AutoMapper.NullableDateTimeTypeConverter.Convert(System.Nullable{System.DateTime},System.String,AutoMapper.ResolutionContext)">
            <summary>
            Convert a nullable DateTime into a nullable string.
            </summary>
            <param name="source">The nullable DateTime to be converted.</param>
            <param name="destination"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Users.API.Read.AutoMapper.PagedListTypeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Users.API.Read.AutoMapper.PagedListTypeConverter.Convert(Users.Domain.Interfaces.IPagedList{Users.Domain.Models.User},Users.API.Models.Shared.PagedList{Users.API.Models.Response.v1.UserResponse},AutoMapper.ResolutionContext)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Users.API.Read.AutoMapper.PageOfUsersToPageOfUsersResponse">
            <summary>
            
            </summary>
        </member>
        <member name="M:Users.API.Read.AutoMapper.PageOfUsersToPageOfUsersResponse.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Users.API.Read.AutoMapper.UserToUserResponse">
            <summary>
            
            </summary>
        </member>
        <member name="M:Users.API.Read.AutoMapper.UserToUserResponse.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Users.API.Read.Controllers.v1.UsersController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Users.API.Read.Controllers.v1.UsersController.#ctor(Microsoft.Extensions.Logging.ILogger{Users.API.Read.Controllers.v1.UsersController},MediatR.IMediator,AutoMapper.IMapper,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="mediator"></param>
            <param name="mapper"></param>
            <param name="configuration"></param>
            <param name="context"></param>
            <param name="apiVersionDescriptionProvider"></param>
        </member>
        <member name="M:Users.API.Read.Controllers.v1.UsersController.Get(Users.API.Models.Request.v1.GetUserRequest)">
            <summary>
            Get a single user by their unique identifier
            </summary>
            <param name="getUserRequest">
            The unique identifier for the user
            </param>
            <returns>The requested user (shaped, if required)</returns>
            <response code="200">Success - OK - Returns the requested user</response>
            <response code="204">Success - No Content - No user matched the given identifier</response>
            <response code="400">Error - Bad Request - It was not possible to bind the request JSON</response>
            <response code="422">Error - Unprocessable Entity - The GetUserRequest object contained invalid data</response>
        </member>
        <member name="M:Users.API.Read.Controllers.v1.UsersController.Head(Users.API.Models.Request.v1.GetUserRequest)">
            <summary>
            Gets the content length of a user
            </summary>
            <param name="getUserRequest">
            A GetUserRequest object which contains fields for paging, searching, filtering, sorting and shaping user data</param>
            <returns>The content length of a page of users</returns>
            <response code="200">Success - OK - Returns the requested page of users</response>
            <response code="204">Success - No Content - No users matched given criteria</response>
            <response code="400">Error - Bad Request - It was not possible to bind the request JSON</response>
        </member>
        <member name="M:Users.API.Read.Controllers.v1.UsersController.Get(Users.API.Models.Request.v1.GetPageOfUsersRequest)">
            <summary>
            Get a page of users
            </summary>
            <param name="getPageOfUsersRequest">
            A GetPageOfUsersRequest object contains fields for paging, searching, filtering, sorting and shaping user data</param>
            <returns>A page of users</returns>
            <response code="200">Success - OK - Returns the requested page of users</response>
            <response code="204">Success - No Content - No users matched given criteria</response>
            <response code="400">Error - Bad Request - It was not possible to bind the request JSON</response>
        </member>
        <member name="M:Users.API.Read.Controllers.v1.UsersController.Head(Users.API.Models.Request.v1.GetPageOfUsersRequest)">
            <summary>
            Gets the content length of a page of users
            </summary>
            <param name="getPageOfUsersRequest">
            A GetUsersRequest object which contains fields for paging, searching, filtering, sorting and shaping user data</param>
            <returns>The content length of a page of users</returns>
            <response code="200">Success - OK - Returns the requested page of users</response>
            <response code="204">Success - No Content - No users matched given criteria</response>
            <response code="400">Error - Bad Request - It was not possible to bind the request JSON</response>
        </member>
        <member name="M:Users.API.Read.Controllers.v1.UsersController.GetOptions">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Users.API.Read.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:Users.API.Read.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Users.API.Read.StartUp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Users.API.Read.StartUp.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Users.API.Read.StartUp.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Users.API.Read.StartUp.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
             <summary>
            
             </summary>
             <param name="services"></param>
        </member>
        <member name="M:Users.API.Read.StartUp.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            
            </summary>
            <param name="applicationBuilder"></param>
            <param name="webHostEnvironment"></param>
            <param name="apiVersionDescriptionProvider"></param>
        </member>
    </members>
</doc>
